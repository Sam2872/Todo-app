{"version":3,"sources":["Form.js","LIstItem.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","input","setInput","list","setList","setRank","className","id","placeholder","type","value","onChange","e","target","Button","variant","onClick","preventDefault","text","completed","Math","random","color","name","class","LIstItem","item","map","listitem","filter","List","filtered","App","date","moment","format","useState","Input","rank","setFiltered","useEffect","getList","changefiltered","saveList","localStorage","setItem","JSON","stringify","getItem","savedList","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342c6e34.chunk.js","sourcesContent":[" import React from 'react'\r\n import { Button } from '@material-ui/core'\r\n const Form = ({input, setInput,list, setList,setRank}) => {\r\n     const handleChange=(e) =>{\r\n         setInput(e.target.value)\r\n     }\r\n     const handleSubmit = (e) =>{\r\n         e.preventDefault();\r\n         setList([...list ,{text: input, completed:false, id: Math.random()*1000 }]);\r\n         setInput(\"\")\r\n     }\r\n     const fitlerhandler= (e) =>{\r\n        setRank(e.target.value);\r\n     }\r\n     return (\r\n         <section className=' d-flex justify-content-center mt-4'>\r\n            <form > \r\n                <div className='d-flex'>\r\n                    <input id=\"my-input\" placeholder=\"Enter a task\"  type=\"input\" value={input} onChange={handleChange} />\r\n                    <Button className='bton' variant=\"contained\"  type='submit' onClick={handleSubmit} color=\"secondary\">\r\n                    Add\r\n                    </Button>\r\n               <div>\r\n                <select onChange={fitlerhandler} name=\"todos\" class=\"filter-todo\">\r\n                <option value=\"All\">All</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n               </div>\r\n                   \r\n                </div>\r\n\r\n            </form>\r\n         </section>\r\n     )\r\n }\r\n \r\n export default Form\r\n ","import React from 'react'\r\n\r\nconst LIstItem = ({item,list,setList}) => {\r\nconst deleteHandler=()=>{ \r\n    setList(list.filter(e =>e.id!==item.id))\r\n}\r\nconst checkHandler =() =>{\r\n    setList(list.map((listitem)=>{\r\n        if(listitem.id===item.id){\r\n            return(\r\n                {...listitem,completed: !listitem.completed}\r\n            )\r\n        }\r\n        return listitem;\r\n    }))\r\n}\r\n    return (\r\n        <div className='list p-2 mt-2 d-flex align-items-center justify-content-between'>\r\n            <div className={`text ${item.completed? \"checked\":\"\"} ` } >\r\n            <p>{item.text}</p>\r\n            </div>\r\n            <div className='d-flex \r\n            bton'>\r\n                <button className=\"check\" onClick={checkHandler}><i className=\"fa fa-check\"></i></button>\r\n                <button className='trash' onClick={deleteHandler}><i className=\"fa fa-trash \"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LIstItem\r\n","import React from 'react'\r\nimport ListItem from './LIstItem'\r\n\r\nconst List = ({list, setList,filtered}) => {\r\n    return (\r\n        <section className='container d-flex justify-content-center '>\r\n        <div className='col-12 col-md-7'>\r\n          <center className='mt-5'>\r\n            <h4>To-Do list</h4>\r\n            <hr ></hr>\r\n          </center>\r\n          {filtered.map((item)=>{\r\n            return(\r\n                <ListItem key={item.id} item={item} list={list} setList={setList} />\r\n            )\r\n          })}\r\n      </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React,{useState,useEffect} from 'react'\nimport moment from 'moment';\nimport Form from './Form';\nimport List from './List';\n\nconst App = () => {\n  var date = moment().format('Do MMMM YYYY');\n  const [Input, setInput] = useState(\"\")\n  const [list, setList] = useState([])\n  const [rank,setRank] = useState(\"All\")\n  const [filtered, setFiltered] = useState([])\n\n  useEffect(() => {\n     getList();   \n     // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    changefiltered();\n    saveList();\n    // eslint-disable-next-line\n  }, [list,rank])\n  \n  const changefiltered = () =>{\n    switch(rank){\n      case \"Completed\":\n        setFiltered(list.filter(item=> item.completed=== true));\n        break;\n        case \"Uncompleted\":\n          setFiltered(list.filter(item=> item.completed===  false));\n          break;  \n        default:\n          setFiltered(list)  \n    }\n  }\n   const saveList =()=>{\n     localStorage.setItem('list', JSON.stringify(list));\n   }\n   const getList = () =>{\n     if (localStorage.getItem('list')==null){\n       localStorage.setItem('list', JSON.stringify([]));\n     }\n     else {\n      let savedList=  JSON.parse(localStorage.getItem('list'));\n      setList(savedList)\n     }\n   }\n\n   return (\n    <div className='container-fluid'>\n      <center className='col mt-5'>\n         <h2>{date}</h2>\n      </center>\n      <center className='mt-2'>\n        <h1>what's on your to-do checklist <span> today?</span></h1>\n      </center>\n      <Form input={Input} setInput={setInput} list={list} setList={setList} setRank={setRank} />\n      <List Input={Input} list={list} filtered={filtered}  setList={setList}/>\n      \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}